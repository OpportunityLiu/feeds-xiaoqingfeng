#!/bin/sh /etc/rc.common
# Copyright (C) 2016 Chen RuiWei <crwbak@gmail.com>
# Copyright (C) 2021 xiaoqingfeng <xiaoqingfengatgm@gmail.com>
START=99
STOP=10

CONFIG=softethervpn

add_rule() {
	#openvpnport=$(cat /usr/libexec/softethervpn/vpn_server.config 2>/dev/null | grep OpenVPN_UdpPortList | awk -F " " '{print $3}')
	#[ -z "$openvpnport" ] && openvpnport=1194

	iptables -N SOFTETHER_VPN-SERVER
	iptables -I INPUT -j SOFTETHER_VPN-SERVER
	
	iptables -A SOFTETHER_VPN-SERVER -p udp -m multiport --dports 500,1701,4500 -m comment --comment "L2TP/IPSec" -j ACCEPT
	#iptables -A SOFTETHER_VPN-SERVER -p udp --dport $openvpnport -m comment --comment "OpenVPN" -j ACCEPT
	#iptables -A SOFTETHER_VPN-SERVER -p tcp --dport $openvpnport -m comment --comment "OpenVPN" -j ACCEPT
	iptables -A SOFTETHER_VPN-SERVER -p tcp --dport 5555 -j ACCEPT
	#iptables -A SOFTETHER_VPN-SERVER -p tcp --dport 8888 -j ACCEPT
	#iptables -A SOFTETHER_VPN-SERVER -p tcp --dport 992 -j ACCEPT
}

del_rule() {
	count=$(iptables -n -L INPUT 2>/dev/null | grep -c "SOFTETHER_VPN-SERVER")
	if [ -n "$count" ]; then
		until [ "$count" = 0 ]
		do
			rules=$(iptables -n -L INPUT --line-num 2>/dev/null | grep "SOFTETHER_VPN-SERVER" | awk '{print $1}')
			for rule in $rules
			do
				iptables -D INPUT $rule 2>/dev/null
				break
			done
			count=$(expr $count - 1)
		done
	fi

	iptables -F SOFTETHER_VPN-SERVER 2>/dev/null
	iptables -X SOFTETHER_VPN-SERVER 2>/dev/null
}

gen_include() {
	echo '#!/bin/sh' > /var/etc/$CONFIG.include
	extract_rules() {
		echo "*$1"
		iptables-save -t $1 | grep "SOFTETHER_VPN-SERVER" | \
		sed -e "s/^-A \(INPUT\)/-I \1 1/"
		echo 'COMMIT'
	}
	cat <<-EOF >> /var/etc/$CONFIG.include
		iptables-save -c | grep -v "SOFTETHER_VPN-SERVER" | iptables-restore -c
		iptables-restore -n <<-EOT
		$(extract_rules filter)
		EOT
	EOF
	return 0
}

addUCIUDPRule() {
uci -q batch <<-EOF >/dev/null
	add firewall rule
	rename firewall.@rule[-1]="HC_U_$1"
	set firewall.@rule[-1].name=HC_U_$1
	set firewall.@rule[-1].src=wan
	set firewall.@rule[-1].proto=udp
	set firewall.@rule[-1].dest_port=$1 
	set firewall.@rule[-1].target=ACCEPT
EOF
}

addUCITCPRule() {
uci -q batch <<-EOF >/dev/null
	add firewall rule
	rename firewall.@rule[-1]="HC_T_$1"
	set firewall.@rule[-1].name=HC_T_$1
	set firewall.@rule[-1].src=wan
	set firewall.@rule[-1].proto=tcp
	set firewall.@rule[-1].dest_port=$1 
	set firewall.@rule[-1].target=ACCEPT
EOF
}

start()
{
	enable=$(uci -q get homeconnect.@softether[0].enable)
	[ $enable -ne 1 ] && {
		#remove firewall uci config
		/usr/share/homeconnect/clearAllfwRules.sh
		exit 0
	} || {
		#add firewall uci config
		addUCIUDPRule 500
		addUCIUDPRule 1701
		addUCIUDPRule 4500
		uci commit firewall >/dev/null 2>&1
	}
	/usr/bin/env LANG=en_US.UTF-8 /usr/libexec/softethervpn/vpnserver start > /dev/null 2>&1
	#add_rule
	#gen_include
	tap_interface_bridged=$(uci show network.lan.ifname | grep tap_homelede | wc -l)
	[ $tap_interface_bridged -eq 0 ] && {
		old_lan_ifname=$(uci show network.lan.ifname | cut -d \' -f 2)
		lan_ifname="$old_lan_ifname tap_homelede"
		eval "uci set network.lan.ifname='$lan_ifname'"
		uci commit network
		/etc/init.d/network restart
	}
}

stop()
{
	/usr/bin/env LANG=en_US.UTF-8 /usr/libexec/softethervpn/vpnserver stop > /dev/null 2>&1
	#del_rule
	#rm -rf /var/etc/$CONFIG.include
	
	tap_interface_bridged=$(uci show network.lan.ifname | grep tap_homelede | wc -l)
	[ $tap_interface_bridged -eq 1 ] && {
		old_lan_ifname=$(uci show network.lan.ifname | cut -d \' -f 2)
		lan_ifname=${old_lan_ifname// tap_homelede/}
		eval "uci set network.lan.ifname='$lan_ifname'"
		uci commit network
		/etc/init.d/network restart
	}
}
